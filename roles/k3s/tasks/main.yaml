---

- name: Include Roles
  ansible.builtin.include_role:
    name: "{{ item }}"
  loop:
    - common_packages
    - bashrc
    - timezone
    - sudo
    - resolved
    - add_root_ca
    - firewall

- name: Set controller based facts
  ansible.builtin.set_fact:
    k3s_is_controller: true
    k3s_in_cluster: "{{ item.0.name }}"
    k3s_bootstrap_host: "{{ item.0.bootstrap.node }}"
    k3s_bootstrap_ip: "{{ item.0.bootstrap.ip }}"
    k3s_tls_san: "{{ item.0.tls_san.node }}"
    k3s_tls_san_ip: "{{ item.0.tls_san.ip }}"
    k3s_ips: "{{ item.0.ips }}"
    k3s_networks: "{{ item.0.networks }}"
  loop: "{{ k3s_clusters | subelements('controllers') }}"
  when: "item.1 == inventory_hostname"

- name: Set node based facts
  ansible.builtin.set_fact:
    k3s_is_node: true
    k3s_in_cluster: "{{ item.0.name }}"
    k3s_bootstrap_host: "{{ item.0.bootstrap.node }}"
    k3s_bootstrap_ip: "{{ item.0.bootstrap.ip }}"
    k3s_tls_san: "{{ item.0.tls_san.node }}"
    k3s_tls_san_ip: "{{ item.0.tls_san.ip }}"
    k3s_ips: "{{ item.0.ips }}"
    k3s_networks: "{{ item.0.networks }}"
  loop: "{{ k3s_clusters | subelements('nodes') }}"
  when:
    - "item.1 == inventory_hostname"
    - k3s_is_controller is sameas false

- name: Install keepalived
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - keepalived

- name: Install keepalive config
  ansible.builtin.template:
    src: keepalived.conf.j2
    dest: /etc/keepalived/keepalived.conf
    owner: root
    group: root
    mode: "0644"
  when:
    - k3s_is_controller is sameas true

- name: Include Firewall rules
  ansible.builtin.include_tasks: "{{ k3s_firewalls[ansible_os_family] }}.yaml"

- name: Create control directory
  ansible.builtin.file:
    path: /var/opt/k3s
    state: directory
    mode: "0755"
    owner: root

- name: Create /etc/rancher/k3s
  ansible.builtin.file:
    path: /etc/rancher/k3s
    state: directory
    mode: "0755"
    owner: root

- name: Enable mirroring of images from an upstream container registry
  ansible.builtin.copy:
    dest: /etc/rancher/k3s/registries.yaml
    content: |
      mirrors:
        "*":
        #docker.io:
        #registry.k8s.io:
    mode: "0644"

- name: Create k3s installer script
  ansible.builtin.copy:
    dest: /var/opt/k3s/k3s-installer.sh
    content: |
      #!/bin/bash
      mkdir -p /usr/local/bin
      cd /usr/local/bin
      curl -sfL https://get.k3s.io | \
        sh -s - server \
        --cluster-init \
        --embedded-registry \
        --tls-san={{ k3s_tls_san }} \
        --tls-san={{ k3s_tls_san_ip }}
      touch /var/opt/k3s/install.done
    mode: "0755"
  when:
    - "k3s_bootstrap_host == inventory_hostname"
    - k3s_is_controller is sameas true
    - k3s_is_node is sameas false

- name: Check if k8s is initialised on bootstrap host
  ansible.builtin.stat:
    path: /var/opt/k3s/install.done
  register: installation_done
  when:
    - "k3s_bootstrap_host == inventory_hostname"
    - k3s_is_controller is sameas true
    - k3s_is_node is sameas false

- name: Install k3s on bootstrap host
  ansible.builtin.command: /var/opt/k3s/k3s-installer.sh
  args:
    creates: /etc/containerd/config.toml
  changed_when: false
  when:
    - not installation_done.stat.exists
    - "k3s_bootstrap_host == inventory_hostname"
    - k3s_is_controller is sameas true
    - k3s_is_node is sameas false

- name: Wait for 6443/tcp on bootstrap node
  ansible.builtin.wait_for:
    host: "{{ k8s_bootstrap_host }}"
    port: 6443
    delay: 2

- name: Get Token from bootstrap node
  ansible.builtin.command: cat /var/lib/rancher/k3s/server/node-token
  register: k3s_token
  delegate_to: "{{ k3s_bootstrap_host }}"
  changed_when: false
  when: "k3s_bootstrap_host != inventory_hostname"

- name: Create the controller join script
  ansible.builtin.copy:
    dest: /var/opt/k3s/k3s-installer.sh
    content: |
      #!/bin/bash
      mkdir -p /usr/local/bin
      cd /usr/local/bin
      curl -sfL https://get.k3s.io | \
        K3S_TOKEN={{ k3s_token.stdout }} sh -s - server \
        --server https://{{ k3s_bootstrap_host }}:6443 \
        --embedded-registry \
        --tls-san={{ k3s_tls_san }} \
        --tls-san={{ k3s_tls_san_ip }}
      touch /var/opt/k3s/install.done
    mode: "0755"
  when:
    - k3s_is_controller is sameas true
    - k3s_is_node is sameas false
    - "k3s_bootstrap_host != inventory_hostname"

- name: Create the node join script
  ansible.builtin.copy:
    dest: /var/opt/k3s/k3s-installer.sh
    content: |
      #!/bin/bash
      mkdir -p /usr/local/bin
      cd /usr/local/bin
      curl -sfL https://get.k3s.io | \
        K3S_TOKEN={{ k3s_token.stdout }} sh -s - agent \
        --server https://{{ k3s_bootstrap_host }}:6443
      touch /var/opt/k3s/install.done
    mode: "0755"
  when:
    - k3s_is_controller is sameas false
    - k3s_is_node is sameas true
    - "k3s_bootstrap_host != inventory_hostname"

- name: Check if k8s is initialised
  ansible.builtin.stat:
    path: /var/opt/k3s/install.done
  register: installation_done
  when: "k3s_bootstrap_host != inventory_hostname"

- name: Install k3s
  ansible.builtin.command: /var/opt/k3s/k3s-installer.sh
  args:
    creates: /etc/containerd/config.toml
  changed_when: false
  when:
    - "k3s_bootstrap_host != inventory_hostname"
    - not installation_done.stat.exists

...
