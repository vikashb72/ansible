---

- name: Update apt
  ansible.builtin.apt:
    upgrade: true
    update_cache: true

- name: Download docker key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker-apt-keyring.asc
    mode: "0644"

- name: Add docker to apt repository.
  ansible.builtin.apt_repository:
    repo: |
      deb [arch=amd64 signed-by=/etc/apt/keyrings/docker-apt-keyring.asc]
      https://download.docker.com/linux/ubuntu {{ ansible_facts['lsb']['codename'] }} stable
    state: present

- name: Add yq apt repository.
  ansible.builtin.apt_repository:
    repo: "ppa:rmescandon/yq"
    state: present

- name: Download k8s key
  ansible.builtin.get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key
    dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
    mode: "0644"

- name: Add Kubernetes apt repository.
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /"
    state: present

- name: Download helm key
  ansible.builtin.get_url:
    url: https://baltocdn.com/helm/signing.asc
    dest: /etc/apt/keyrings/helm-apt-keyring.asc
    mode: "0644"

- name: Add helm apt repository.
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/helm-apt-keyring.asc] https://baltocdn.com/helm/stable/debian/ all main"
    state: present

- name: Download hashicorp key
  ansible.builtin.get_url:
    url: https://apt.releases.hashicorp.com/gpg
    dest: /etc/apt/keyrings/hashicorp-keyring.asc
    mode: "0644"

- name: Add hashicorp apt repository.
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/hashicorp-keyring.asc] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
    state: present

- name: Run the equivalent of "apt-get update"
  ansible.builtin.apt:
    update_cache: true

- name: Install Docker packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin
    - nginx
    - yamllint
    - yq
    - jq
    - kubectl
    - apparmor-utils
    - python3-kubernetes
    - python3-jmespath
    - nfs-client
    - helm

- name: Download docker key
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/docker/docker-ce/master/components/cli/contrib/completion/bash/docker
    dest: /etc/bash_completion.d/docker.sh
    mode: "0644"

- name: Add myself to docker group
  ansible.builtin.user:
    name: vikashb
    groups: sudo,docker
    append: true

- name: Pull the registry image
  community.docker.docker_image:
    name: registry:2
    source: pull
  when: "'docker_reg' in group_names"

- name: Create /data/docker/registry
  ansible.builtin.file:
    path: /data/docker/registry
    mode: "0775"
    owner: root
    group: docker
    state: directory

- name: Start registry container
  community.docker.docker_container:
    name: local-registry
    image: registry:2
    volumes:
      - /data/docker/registry:/var/lib/registry
    state: started
    detach: true
    restart: true
    ports:
      - "5000:5000"

- name: Create /var/opt/minikube/add-tools.sh
  ansible.builtin.file:
    path: /var/opt/minikube
    mode: "0775"
    owner: root
    group: root
    state: directory

- name: Create add tools script
  ansible.builtin.copy:
    dest: /var/opt/minikube/add-tools.sh
    content: |
      #!/bin/bash
      mkdir -p /usr/local/bin
      cd /usr/local/bin
      # kubctl-convert
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl-convert"
      chmod 0755 /usr/local/bin/kubectl-convert
      # kustomize
      curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
      # glooctl
      curl -sL https://run.solo.io/gloo/install | sh
      mv /root/.gloo/bin/glooctl  .
      #
      curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
      sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
      rm argocd-linux-amd64
      rm -fr /root/.gloo
      /usr/local/bin/glooctl install gateway
      touch /var/opt/minikube/add-tools.done
    owner: root
    mode: "0700"

- name: Check if /var/opt/minikube/add-tools.done exists
  ansible.builtin.stat:
    path: /var/opt/minikube/add-tools.done
  register: tools_added

- name: Execute /var/opt/minikube/add-tools.sh
  ansible.builtin.command: /var/opt/minikube/add-tools.sh
  args:
    creates: /var/opt/minikube/add-tools.done
  changed_when: false
  when: not tools_added.stat.exists

- name: Install helm
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    owner: root
    mode: "0755"
  loop:
    - minikube
    - minikube-init-env.sh


- name: Update bashrc for my settings
  ansible.builtin.blockinfile:
    path: "{{ files }}"
    marker: "# {mark} MINIKUBE ANSIBLE MANAGED BLOCK -"
    block: |
      source <(kubectl completion bash)
      export XAUTHORITY=$HOME/.Xauthority
  loop:
    - /root/.bashrc
    - /home/vikashb/.bashrc
  loop_control:
    loop_var: files

...
