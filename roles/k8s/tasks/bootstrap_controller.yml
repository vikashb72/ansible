---

- name: Initialise k8s (if required) on primary controller
  ansible.builtin.shell: >
    kubeadm init --pod-network-cidr={{ pod_cidr_nw }}
    --control-plane-endpoint={{ bootrap_host }}
    --upload-certs
  changed_when: false
  register: k8s_init
  when: bootrap_host == inventory_hostname

- name: Check if helm is installed
  ansible.builtin.stat:
    path: /usr/sbin/helm
  register: have_helm

- name: Install helm on bootstrap host
  ansible.builtin.include_tasks: helm.yml
  when:
    - bootrap_host == inventory_hostname
    - not have_helm.stat.exists

- name: Install kube config on bootstrap host
  ansible.builtin.include_tasks: kube_config.yml
  when: bootrap_host == inventory_hostname

- name: Install flannel on bootstrap host
  ansible.builtin.include_tasks: flannel.yml
  when:
    - bootrap_host == inventory_hostname

- name: Install metallb on bootstrap host
  ansible.builtin.include_tasks: metallb.yml
  when:
    - bootrap_host == inventory_hostname

- name: End
  ansible.builtin.meta: end_host

- name: Get cert
  ansible.builtin.command: kubeadm init phase upload-certs --upload-certs
  register: k8s_cert
  delegate_to: "{{ bootrap_host }}"
  changed_when: false
  when:
    - "'k8s_controllers' in group_names"
    - bootrap_host != inventory_hostname
    - not have_k8s_config.stat.exists

- name: Get Join Command
  ansible.builtin.command: kubeadm token create --print-join-command --ttl=30m
  register: k8s_join
  delegate_to: "{{ bootrap_host }}"
  changed_when: false
  when:
    - "'k8s' in group_names"
    - bootrap_host != inventory_hostname

- name: Wait for 6443/tcp on bootstrap node
  ansible.builtin.wait_for:
    host: "{{ ansible_default_ipv4.address }}"
    port: 6443
    delay: 2
  when:
    - "'k8s_controllers' in group_names"
    - bootrap_host != inventory_hostname

- name: Controllers join if required
  ansible.builtin.command: >
    {{ k8s_join.stdout }} --control-plane
    --certificate-key {{ k8s_cert.stdout_lines[2] }}
  changed_when: false
  when:
    - "'k8s_controllers' in group_names"
    - bootrap_host != inventory_hostname
    - not have_k8s_config.stat.exists

- name: Install kube config on bootstrap host
  ansible.builtin.include_tasks: kube_config.yml
  when:
    - "'k8s_controllers' in group_names"
    - bootrap_host != inventory_hostname

- name: Install kubectl-convert
  ansible.builtin.copy:
    src: kubectl-convert
    dest: /usr/local/bin/kubectl-convert
    owner: root
    mode: "0755"

- name: Remove taint from host
  kubernetes.core.k8s_taint:
    state: absent
    name: "{{ inventory_hostname }}"
    taints:
      - effect: NoSchedule
        key: "node-role.kubernetes.io/control-plane"

- name: Copy configs
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/var/opt/{{ item }}"
    owner: root
    mode: "0644"
  loop:
    - dashboard.yaml
    - dashboard.adminuser.yml

- name: Install dash board
  ansible.builtin.command: kubectl apply -f /tmp/{{ item }}
  delegate_to: "{{ bootrap_host }}"
  changed_when: false
  loop:
    - dashboard.yaml
    - dashboard.adminuser.yml
  when:
    - "'k8s' in group_names"
    - bootrap_host == inventory_hostname

...
