---

- name: Initialise k8s (if required) on primary controller
  ansible.builtin.shell: >
    kubeadm init --pod-network-cidr={{ k8s_pod_cidr_nw }}
    --control-plane-endpoint={{ k8s_bootstrap_host }}
    --upload-certs
  changed_when: false
  register: k8s_init
  when: k8s_bootstrap_host == inventory_hostname

- name: Check if helm is installed
  ansible.builtin.stat:
    path: /usr/sbin/helm
  register: have_helm

- name: Install helm on bootstrap host
  ansible.builtin.include_tasks: helm.yml
  when:
    - k8s_bootstrap_host == inventory_hostname
    - not have_helm.stat.exists

- name: Install kube config on bootstrap host
  ansible.builtin.include_tasks: kube_config.yml
  when: k8s_bootstrap_host == inventory_hostname

- name: Install flannel on bootstrap host
  ansible.builtin.include_tasks: flannel.yml
  when:
    - k8s_bootstrap_host == inventory_hostname

- name: Install metallb on bootstrap host
  ansible.builtin.include_tasks: metallb.yml
  when:
    - k8s_bootstrap_host == inventory_hostname

- name: Get cert
  ansible.builtin.command: kubeadm init phase upload-certs --upload-certs
  register: k8s_cert
  delegate_to: "{{ k8s_bootstrap_host }}"
  changed_when: false
  when:
    - "'k8s_controllers' in group_names"
    - k8s_bootstrap_host != inventory_hostname
    - not have_k8s_config.stat.exists

- name: Get Join Command
  ansible.builtin.command: kubeadm token create --print-join-command --ttl=30m
  register: k8s_join
  delegate_to: "{{ k8s_bootstrap_host }}"
  changed_when: false
  when:
    - "'k8s' in group_names"
    - k8s_bootstrap_host != inventory_hostname

- name: Wait for 6443/tcp on bootstrap node
  ansible.builtin.wait_for:
    host: "{{ k8s_bootstrap_host }}"
    port: 6443
    delay: 2
  when:
    - "'k8s_controllers' in group_names"
    - k8s_bootstrap_host != inventory_hostname

- name: Controllers join if required
  ansible.builtin.command: >
    {{ k8s_join.stdout }} --control-plane
    --certificate-key {{ k8s_cert.stdout_lines[2] }}
  changed_when: false
  when:
    - "'k8s_controllers' in group_names"
    - k8s_bootstrap_host != inventory_hostname
    - not have_k8s_config.stat.exists

- name: Install kube config on bootstrap host
  ansible.builtin.include_tasks: kube_config.yml
  when:
    - "'k8s_controllers' in group_names"
    - k8s_bootstrap_host != inventory_hostname

- name: Remove taint from host
  kubernetes.core.k8s_taint:
    state: absent
    name: "{{ inventory_hostname }}"
    taints:
      - effect: NoSchedule
        key: "node-role.kubernetes.io/control-plane"

- name: Install dashboard on bootstrap host
  ansible.builtin.include_tasks: dashboard.yml
  when: k8s_bootstrap_host == inventory_hostname

- name: Create add tools script
  ansible.builtin.copy:
    dest: /var/opt/k8s/add-tools.sh
    content: |
      #!/bin/bash
      mkdir -p /usr/local/bin
      cd /usr/local/bin
      # kubctl-convert
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl-convert"
      chmod 0755 /usr/local/bin/kubectl-convert
      # kustomize
      curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
      # glooctl
      curl -sL https://run.solo.io/gloo/install | sh
      mv /root/.gloo/bin/glooctl  .
      #
      curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
      sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
      rm argocd-linux-amd64
      rm -fr /root/.gloo
      /usr/local/bin/glooctl install gateway
      touch /var/opt/k8s/add-tools.done
    owner: root
    mode: "0700"
  when: k8s_bootstrap_host == inventory_hostname

- name: Check if /var/opt/k8s/update-kube-proxy.done exists
  ansible.builtin.stat:
    path: /var/opt/k8s/add-tools.sh
  register: updated_kube_proxy
  when: k8s_bootstrap_host == inventory_hostname

- name: Execute /var/opt/k8s/add-tools.sh
  ansible.builtin.command: /var/opt/k8s/add-tools.sh
  args:
    creates: /var/opt/k8s/add-tools.done
  register: update_kube_proxy
  changed_when: update_kube_proxy.rc == 0
  when: k8s_bootstrap_host == inventory_hostname

- name: Install helm on bootstrap host
  ansible.builtin.include_tasks: helm.yml
  loop:
    - dynamic_nfs_provisioning.yml
    - vault.yml
    - argo.yml
#    - gloo.yaml
  when: k8s_bootstrap_host == inventory_hostname

...
