---

- name: Initialise k8s (if required) on primary controller
  ansible.builtin.shell: >
    kubeadm init --pod-network-cidr={{ pod_cidr_nw }}
    --control-plane-endpoint={{ bootrap_host }}
    --upload-certs
  changed_when: false
  register: k8s_init
  when:
    - "'k8s_controllers' in group_names"
    - bootrap_host == inventory_hostname
    - not have_k8s_config.stat.exists

- name: Create ~/.kube directory
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
    owner: vikashb
  loop:
    - /home/vikashb/.kube
    - /root/.kube

- name: Copy /etc/kubernetes/admin.conf to $HOME/.kube/config
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{ item }}"
    owner: vikashb
    mode: "0644"
    remote_src: true
  loop:
    - /home/vikashb/.kube/config
    - /root/.kube/config
  when:
    - "'k8s_controllers' in group_names"
    - bootrap_host == inventory_hostname

- name: Enable strict arp in kube-proxy
  ansible.builtin.shell: 
    cmd: >
      kubectl get configmap kube-proxy -n kube-system -o yaml
      | sed -e "s/strictARP: false/strictARP: true/"
      | kubectl apply -f - -n kube-system
    chdir: /tmp/
  when:
    - "'k8s_controllers' in group_names"
    - bootrap_host == inventory_hostname

- name: Set maxPerCore to 0
  ansible.builtin.shell: 
    cmd: >
      kubectl get configmap kube-proxy -n kube-system -o yaml
      | sed -e "s/maxPerCore: null/maxPerCore: 0/"
      | kubectl apply -f - -n kube-system
    chdir: /tmp/
  when:
    - "'k8s_controllers' in group_names"
    - bootrap_host == inventory_hostname

- name: Install the flannel Network addon
  ansible.builtin.command: >
    kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f
    https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
  changed_when: false
  when:
    - "'k8s_controllers' in group_names"
    - bootrap_host == inventory_hostname
    - not have_k8s_config.stat.exists

- name: Get Cert
  ansible.builtin.command: kubeadm init phase upload-certs --upload-certs
  register: k8s_cert
  delegate_to: "{{ bootrap_host }}"
  changed_when: false
  when:
    - "'k8s_controllers' in group_names"
    - bootrap_host != inventory_hostname
    - not have_k8s_config.stat.exists

- name: Get Join Command
  ansible.builtin.command: kubeadm token create --print-join-command --ttl=30m
  register: k8s_join
  delegate_to: "{{ bootrap_host }}"
  changed_when: false
  when:
    - "'k8s' in group_names"
    - bootrap_host != inventory_hostname

- name: Wait for 6443/tcp on bootstrap node
  wait_for: "host={{ bootrap_host }} port=6443 timeout=1"
  when:
    - "'k8s_controllers' in group_names"
    - bootrap_host != inventory_hostname
    - not have_k8s_config.stat.exists

- name: Controllers join if required
  ansible.builtin.command: >
    {{ k8s_join.stdout }} --control-plane
    --certificate-key {{ k8s_cert.stdout_lines[2] }}
  changed_when: false
  when:
    - "'k8s_controllers' in group_names"
    - bootrap_host != inventory_hostname
    - not have_k8s_config.stat.exists

- name: Copy /etc/kubernetes/admin.conf to $HOME/.kube/config
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/vikashb/.kube/config
    owner: vikashb
    mode: "0644"
    remote_src: true
  when: "'k8s_controllers' in group_names"

- name: Download helm key
  ansible.builtin.get_url:
    url: https://baltocdn.com/helm/signing.asc
    dest: /etc/apt/keyrings/helm-apt-keyring.asc
    mode: "0644"

- name: Add Kubernetes apt repository.
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/helm-apt-keyring.asc] https://baltocdn.com/helm/stable/debian/ all main"
    state: present

- name: Run the equivalent of "apt-get update"
  ansible.builtin.apt:
    update_cache: true

- name: Install packages
  ansible.builtin.package:
    name: helm
    state: present

- name: Ingress
  ansible.builtin.command: kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.14.5/config/manifests/metallb-native.yaml
  delegate_to: "{{ bootrap_host }}"
  changed_when: false
  when:
    - "'k8s' in group_names"
    - bootrap_host == inventory_hostname

- name: Create memberlist secret for metallb
  ansible.builtin.command: >
    kubectl create secret generic -n metallb-system memberlist 
      --from-literal=secretkey="$(openssl rand -base64 128)"
  changed_when: false
  when:
    - "'k8s_controllers' in group_names"
    - bootrap_host == inventory_hostname
    - not have_k8s_config.stat.exists

- name: Install kubectl-convert
  ansible.builtin.copy:
    src: kubectl-convert
    dest: /usr/local/bin/kubectl-convert
    owner: root
    mode: "0755"

- name: Copy configs
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/tmp/{{ item }}"
    owner: root
    mode: "0644"
  loop:
    - ipaddresses_pools.yaml
    - l2-advert.yaml
    - dashboard.yaml
    - dashboard.adminuser.yml

- name: Untaint all nodes
  ansible.builtin.command: kubectl taint nodes  {{ item }} node-role.kubernetes.io/control-plane-
  loop:
    - u22-k8s-cp-1
    - u22-k8s-cp-2
    - u22-k8s-cp-3
  when:
    - "'k8s' in group_names"
    - bootrap_host == inventory_hostname

- name: Install
  ansible.builtin.command: kubectl apply -f /tmp/{{ item }}
  delegate_to: "{{ bootrap_host }}"
  changed_when: false
  loop:
    - ipaddresses_pools.yaml
    - l2-advert.yaml
    - dashboard.yaml
    - dashboard.adminuser.yml
  when:
    - "'k8s' in group_names"
    - bootrap_host == inventory_hostname

...
